name: default
version: 1.17.2
providers:
  appengine:
    enabled: false
    accounts: []
  aws:
    enabled: false
    accounts: []
    bakeryDefaults:
      baseImages: []
    defaultKeyPairTemplate: '{{name}}-keypair'
    defaultRegions:
    - name: us-west-2
    defaults:
      iamRole: BaseIAMRole
  ecs:
    enabled: false
    accounts: []
  azure:
    enabled: false
    accounts: []
    bakeryDefaults:
      templateFile: azure-linux.json
      baseImages: []
  dcos:
    enabled: false
    accounts: []
    clusters: []
  dockerRegistry:
    enabled: true
    accounts:
    - name: dockerhub
      requiredGroupMembership: []
      providerVersion: V1
      permissions: {}
      address: https://index.docker.io
      email: fake.email@spinnaker.io
      cacheIntervalSeconds: 30
      clientTimeoutMillis: 60000
      cacheThreads: 1
      paginateSize: 100
      sortTagsByDate: false
      trackDigests: false
      insecureRegistry: false
      repositories:
      - heimann/swisslog-demo-scs
    - name: docker-hub-demo-scs
      requiredGroupMembership: []
      providerVersion: V1
      permissions: {}
      address: https://index.docker.io
      username: heimann
      password: mar5bcxg
      email: fake.email@spinnaker.io
      cacheIntervalSeconds: 30
      clientTimeoutMillis: 60000
      cacheThreads: 1
      paginateSize: 100
      sortTagsByDate: false
      trackDigests: false
      insecureRegistry: false
      repositories:
      - heimann/swisslog-demo-scs
    - name: swisslog-nightly
      requiredGroupMembership: []
      providerVersion: V1
      permissions: {}
      address: http://10.49.145.193:8090
      username: DockerNightlyDeployer
      password: '!SwisslogDockerNightlyDeployer'
      email: fake.email@spinnaker.io
      cacheIntervalSeconds: 30
      clientTimeoutMillis: 60000
      cacheThreads: 1
      paginateSize: 100
      sortTagsByDate: false
      trackDigests: false
      insecureRegistry: false
      repositories: []
    primaryAccount: dockerhub
  google:
    enabled: false
    accounts: []
    bakeryDefaults:
      templateFile: gce.json
      baseImages: []
      zone: us-central1-f
      network: default
      useInternalIp: false
  kubernetes:
    enabled: true
    accounts:
    - name: default
      requiredGroupMembership: []
      providerVersion: V2
      permissions: {}
      dockerRegistries:
      - accountName: dockerhub
        namespaces: []
      context: default
      configureImagePullSecrets: true
      serviceAccount: true
      cacheThreads: 1
      namespaces: []
      omitNamespaces:
      - kube-system
      - kube-public
      kinds: []
      omitKinds: []
      customResources: []
      cachingPolicies: []
      oAuthScopes: []
      onlySpinnakerManaged: false
    primaryAccount: default
  oracle:
    enabled: false
    accounts: []
    bakeryDefaults:
      templateFile: oci.json
      baseImages: []
  cloudfoundry:
    enabled: false
    accounts: []
deploymentEnvironment:
  size: SMALL
  type: Distributed
  accountName: default
  imageVariant: SLIM
  updateVersions: true
  consul:
    enabled: false
  vault:
    enabled: false
  location: default
  customSizing: {}
  sidecars: {}
  initContainers: {}
  hostAliases: {}
  affinity: {}
  tolerations: {}
  nodeSelectors: {}
  gitConfig:
    upstreamUser: spinnaker
  livenessProbeConfig:
    enabled: false
  haServices:
    clouddriver:
      enabled: false
      disableClouddriverRoDeck: false
    echo:
      enabled: false
persistentStorage:
  persistentStoreType: s3
  azs: {}
  gcs:
    rootFolder: front50
  redis: {}
  s3:
    bucket: spinnaker
    rootFolder: front50
    endpoint: http://spinnaker-minio:9000
    accessKeyId: spinnakeradmin
    secretAccessKey: spinnakeradmin
  oracle: {}
features:
  auth: false
  fiat: false
  chaos: false
  entityTags: false
  artifacts: true
metricStores:
  datadog:
    enabled: false
    tags: []
  prometheus:
    enabled: false
    add_source_metalabels: true
  stackdriver:
    enabled: false
  newrelic:
    enabled: false
    tags: []
  period: 30
  enabled: false
notifications:
  slack:
    enabled: false
  twilio:
    enabled: false
    baseUrl: https://api.twilio.com/
  github-status:
    enabled: false
timezone: America/Los_Angeles
ci:
  jenkins:
    enabled: true
    masters:
    - name: master
      permissions: {}
      address: http://ci.swisslog.net
      username: spinnaker
      password: 11c1fba792f837887891f6ff78244f7a38
      csrf: false
    - name: ccsjenkins
      permissions: {}
      address: https://ci.swisslog.com/jenkins
      username: g7heimm
      password: 111ebfdf520707315adca52e2413a60e65
  travis:
    enabled: false
    masters: []
  wercker:
    enabled: false
    masters: []
  concourse:
    enabled: false
    masters: []
  gcb:
    enabled: false
    accounts: []
repository:
  artifactory:
    enabled: false
    searches: []
security:
  apiSecurity:
    ssl:
      enabled: false
    overrideBaseUrl: http://spin-gate.swisslog.net:31031
  uiSecurity:
    ssl:
      enabled: false
    overrideBaseUrl: http://spinnaker.swisslog.net:32076
  authn:
    oauth2:
      enabled: true
      client:
        clientId: spinnaker
        clientSecret: d6bb42a8-fa9c-4518-a48d-0e313fefc713
        accessTokenUri: http://10.49.145.191/auth/realms/Infrastructure/protocol/openid-connect/token
        userAuthorizationUri: http://10.49.145.191/auth/realms/Infrastructure/protocol/openid-connect/auth
        scope: openid
        preEstablishedRedirectUri: http://spin-gate.swisslog.net:31031/login
        useCurrentUri: false
      resource:
        userInfoUri: http://10.49.145.191/auth/realms/Infrastructure/protocol/openid-connect/userinfo
      userInfoMapping:
        email: email
        firstName: given_name
        lastName: family_name
        username: name
    saml:
      enabled: false
      metadataLocal: ''
      issuerId: spinnaker
      keyStore: ''
      keyStorePassword: swisslog
      keyStoreAliasName: saml
      serviceAddress: https://10.49.145.196:8084
      userAttributeMapping: {}
    ldap:
      enabled: false
    x509:
      enabled: false
    iap:
      enabled: false
    enabled: true
  authz:
    groupMembership:
      service: EXTERNAL
      google:
        roleProviderType: GOOGLE
      github:
        roleProviderType: GITHUB
      file:
        roleProviderType: FILE
      ldap:
        roleProviderType: LDAP
    enabled: false
artifacts:
  bitbucket:
    enabled: false
    accounts: []
  gcs:
    enabled: false
    accounts: []
  oracle:
    enabled: false
    accounts: []
  github:
    enabled: false
    accounts: []
  gitlab:
    enabled: true
    accounts:
    - name: gitlab-swisslog
      token: ''
  gitrepo:
    enabled: false
    accounts: []
  http:
    enabled: false
    accounts: []
  helm:
    enabled: false
    accounts: []
  s3:
    enabled: true
    accounts:
    - name: s3-cicd-cluster
      apiEndpoint: http://s3-storage-minio.default.svc.cluster.local:9000
      apiRegion: us-east-1
      awsAccessKeyId: AKIAIOSFODNN7EXAMPLE
      awsSecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
  maven:
    enabled: false
    accounts: []
  templates: []
pubsub:
  enabled: false
  google:
    enabled: false
    pubsubType: GOOGLE
    subscriptions: []
    publishers: []
canary:
  enabled: false
  serviceIntegrations:
  - name: google
    enabled: false
    accounts: []
    gcsEnabled: false
    stackdriverEnabled: false
  - name: prometheus
    enabled: false
    accounts: []
  - name: datadog
    enabled: false
    accounts: []
  - name: signalfx
    enabled: false
    accounts: []
  - name: aws
    enabled: false
    accounts: []
    s3Enabled: false
  reduxLoggerEnabled: true
  defaultJudge: NetflixACAJudge-v1.0
  stagesEnabled: true
  templatesEnabled: true
  showAllConfigsEnabled: true
plugins:
  plugins: []
  enabled: false
  downloadingEnabled: false
  pluginConfigurations:
    plugins: {}
webhook:
  trust:
    enabled: false
telemetry:
  enabled: false
  endpoint: https://stats.spinnaker.io
  instanceId: 01DTGWTD7721H4136NHN5DE46P
  connectionTimeoutMillis: 3000
  readTimeoutMillis: 5000
